

;; БИБЛИОТЕКА ДЛЯ РАБОТЫ С МАТЕМАТИКОЙ
;;	SUB16X16		вычитание 16-разрядных чисел
;;	ADD16X16		сложение 16-разрядных чисел	
;;	MUL16X16s		знаковое умножение 16-разрядных чисел
;;	MUL16X16u		беззнаковое умножение 16-разрядных чисел
;;	DIV16X16s		знаковое деление 16-разрядных чисел
;;	DIV16X16u		беззнаковое деление 16-разрядных чисел
;;	DIV16POWER2s		знаковое деление 16-разрядного числа на степень 2
;;	DIV16POWER2u		беззнаковое деление 16-разрядного числа на степень 2
;;	SIGN16			смена знака 16-разрядного числа
;;	DEC2BCD			перевол 8-разрядного десятичного числа в двоично-десятичное (BCD)
;;	BCD2DEC			перевол 8-разрядного двоично-десятичного (BCD) числа в десятичное	
;;	CP16X16			сравнение 16-разрядных чисел
;;	DIGITS8			вычисление цифр 8-разрядного числа
;;	DIGITS16		вычисление цифр 16-разрядного числа
;; =======================================================================
;; вычитание 16-разрядных чисел
;; вход: 	r16-r17 первый аргумент от H к L
;; 		r18-r19 второй аргумент от H к L
;; выход:	r16-r17 результат от H к L
SUB16X16:
    SUB		r17, r19
    SBC		r16, r18
RET
;; ;; =======================================================================
;; ;; сложение 16-разрядных чисел
;; ;; вход: 	r16-r17 первый аргумент от H к L
;; ;; 		r18-r19 второй аргумент от H к L
;; ;; выход:	r16-r17 результат от H к L
;; ADD16X16:
    ;; ADD		r17, r19
    ;; ADC		r16, r18
;; RET
;; ; =======================================================================
;; ;; знаковое умножение 16-разрядных чисел
;; ;; вход: 	r16-r17 первый аргумент от H к L
;; ;; 		r18-r19 второй аргумент от H к L
;; ;; выход:	r16-r19 результат от H к L
;; MUL16X16s:
    ;; MULS	r18, r16    	;; (signed)ah * (signed)bh
    ;; MOV		r20, r1
    ;; MOV		r21, r0
    ;; MUL r19,r17    	;; al * bl
    ;; MOV		r22, r1
    ;; MOV		r23, r0
    ;; MULSU	r18, r17    	;; (signed)ah * bl
    ;; SBC		r20, r10		;; из-за отриц. чисел
    ;; ADD		r22, r0
    ;; ADC		r21, r1
    ;; ADC		r20, r10
    ;; MULSU	r16, r19    	;; (signed)bh * al
    ;; SBC		r20, r10		;; из-за отриц. чисел
    ;; ADD		r22, r0
    ;; ADC		r21, r1
    ;; ADC		r20, r10
    ;; MOV		r16, r20		;; move result
    ;; MOV		r17, r21
    ;; MOV		r18, r22
    ;; MOV		r19, r23
;; RET
;; ;; =======================================================================
;; ;; беззнаковое умножение 16-разрядных чисел
;; ;; вход: 	r16-r17 первый аргумент от H к L
;; ;; 		r18-r19 второй аргумент от H к L
;; ;; выход:	r16-r19 результат от H к L
;; MUL16X16u:
    ;; MUL    	r18, r16    	;; (unsigned)ah * (unsigned)bh
    ;; MOV		r20, r1
    ;; MOV		r21, r0
    ;; MUL		r19, r17    	;; al * bl
    ;; MOV		r22, r1
    ;; MOV		r23, r0
    ;; MUL	   	r18, r17    	;; (unsigned)ah * bl
    ;; ADD		r22, r0
    ;; ADC		r21, r1
    ;; ADC		r20, r10
    ;; MUL		r16, r19    	;; (unsigned)bh * al
    ;; ADD		r22, r0
    ;; ADC		r21, r1
    ;; ADC		r20, r10
    ;; MOV		r16, r20		;; move result
    ;; MOV		r17, r21
    ;; MOV		r18, r22
    ;; MOV		r19, r23
;; RET
;; ;; =======================================================================
;; ;; знаковое деление 16-разрядных чисел
;; ;; вход: 	r16-r17 первый аргумент от H к L
;; ;; 		r18-r19 второй аргумент от H к L
;; ;; выход:	r16-r17 результат от H к L
;; ;;		R13-R14 остаток от H к L
;; DIV16X16s:	
    ;; MOV		R10, R16	;;вычисляем знак результата
    ;; EOR		R10, R18	;; знак хранится в R10
    ;; SBRS	R16, 7		;; проверяем знак делимого
    ;; RJMP	d16s_1		;; если положительное то идем дальше
    ;; COM		R16		;; иначе меняем знак делимого
    ;; COM		R17		;; преобразуем в доп код
    ;; SUBI	R17, LOW(-1)
    ;; SBCI	R16, HIGH(-1)
;; d16s_1:	
    ;; SBRS	R18, 7		;; проверяем знак делителя
    ;; RJMP	d16s_2
    ;; COM		R18	
    ;; COM		R19
    ;; SUBI	R19, LOW(-1)
    ;; SBCI	R18, HIGH(-1)
    ;; ;; подготовили делимое и делитель
;; d16s_2:	
    ;; ;; очищаем остаток и флаг переноса
    ;; CLR		R14
    ;; CLR		R13
    ;; CLC
    ;; LDI		R31, 17		;; init loop counter
;; d16s_3:		
    ;; ROL		R17		;; shift left dividend
    ;; ROL		R16
    ;; DEC		R31		;; decrement counter
    ;; BRNE	d16s_5		;; if done
    ;; SBRS	R10, 7		;; if MSB in sign register set
    ;; RJMP	d16s_4
    ;; COM		R16		;; change sign of result
    ;; COM		R17
    ;; SUBI	R17, LOW(-1)
    ;; SBCI	R16, HIGH(-1)
;; d16s_4:	
    ;; RET
;; d16s_5:	
    ;; ROL		R14		;; shift dividend into remainder
    ;; ROL		R13
    ;; SUB		R14, R19	;; remainder = remainder - divisor
    ;; SBC		R13, R18
    ;; BRCC	d16s_6		;; if result negative
    ;; ADD		R14, R19	;; restore remainder
    ;; ADC		R13, R18
    ;; CLC				;; clear carry to be shifted into result
    ;; RJMP	d16s_3		;; else
;; d16s_6:	
    ;; SEC				;; set carry to be shifted into result
    ;; RJMP	d16s_3
;; ;; =======================================================================
;; ;; беззнаковое деление 16-разрядных чисел
;; ;; вход: 	r16-r17 первый аргумент от H к L
;; ;; 		r18-r19 второй аргумент от H к L
;; ;; выход:	r16-r17 результат от H к L
;; ;;		R13-R14 остаток от H к L
;; ;; =================================================
;; DIV16X16u:	
    ;; ;; очищаем остаток и флаг переноса
    ;; CLR		R14
    ;; CLR		R13
    ;; CLC
    ;; LDI		R31, 17		;; init loop counter
;; d16u_1:	
    ;; ROL		R17		;; shift left dividend
    ;; ROL		R16
    ;; DEC		R31		;; decrement counter
    ;; BRNE	d16u_2		;; if done
    ;; RET				;; return
;; d16u_2:	
    ;; ROL		R14		;; shift dividend into remainder
    ;; ROL		R13
    ;; SUB		R14, R19	;;remainder = remainder - divisor
    ;; SBC		R13, R18	
    ;; BRCC	d16u_3		;; if result negative
    ;; ADD		R14, R19	;; restore remainder
    ;; ADC		R13, R18
    ;; CLC				;; clear carry to be shifted into result
    ;; RJMP	d16u_1		;; else
;; d16u_3:	
    ;; SEC				;; set carry to be shifted into result
    ;; RJMP	d16u_1
;; ;; =======================================================================
;; ;; знаковое деление 16-разрядного числа на степень 2
;; ;; вход: 	r16-r17 делимое от H к L
;; ;;		r20 степень 2
;; ;; выход:	r16-r17 результат от H к L
;; DIV16POWER2s:
    ;; TST		r20
    ;; BREQ	DIV16POWER2s_2
;; DIV16POWER2s_1:
    ;; ASR		r16
    ;; ROR		r17
    ;; DEC		r20
    ;; BRNE	DIV16POWER2s_1
;; DIV16POWER2s_2:
;; RET
;; ;; =======================================================================
;; ;; беззнаковое деление 16-разрядного числа на степень 2
;; ;; вход: 	r16-r17 делимое от H к L
;; ;;			r20 степень 2
;; ;; выход:	r16-r17 результат от H к L
;; DIV16POWER2u:
    ;; TST		r20
    ;; BREQ	DIV16POWER2u_2
;; DIV16POWER2u_1:
    ;; LSR		r16
    ;; ROR		r17
    ;; DEC		r20
    ;; BRNE	DIV16POWER2u_1
;; DIV16POWER2u_2:
;; RET
;; ;; =======================================================================
;; ;; смена знака 16-разрядного числа
;; ;; вход: 	r16-r17 число от H к L
;; ;; выход:	r16-r17 результат от H к L
;; SIGN16:
    ;; COM		r16
    ;; COM		r17
    ;; SUBI	r17, LOW(-1)
    ;; SBCI	r17, HIGH(-1)
;; RET	
;; ;; =======================================================================
;; ;; перевол 8-разрядного десятичного числа в двоично-десятичное (BCD)
;; ;; вход: 	r16 десятичное число
;; ;; выход:	r16 BCD число
;; DEC2BCD: 
    ;; PUSH 	r17
    ;; PUSH 	r18
    ;; PUSH 	r19
    ;; CPI 	r16, 10
    ;; BRLO 	Dec2Bcd_exit
    ;; PUSH 	r16
    ;; CLR 	r18
    ;; LDI 	r17, 10   
;; Dec2Bcd_1: 
    ;; SUB 	r16,r17 
    ;; INC 	r18
    ;; CPI 	r16, 10    
    ;; BRGE 	Dec2Bcd_1
    ;; CLR 	r19
    ;; CLR 	r16 
;; Dec2Bcd_2: 
    ;; ADD 	r19, r17 
    ;; INC 	r16
    ;; CP 		r16, r18
    ;; BRNE 	Dec2Bcd_2  
    
    ;; POP 	r16
    ;; SUB 	r16, r19 
    ;; SWAP 	r18
    ;; ADD 	r16, r18
;; Dec2Bcd_exit:
    ;; POP 	r19
    ;; POP 	r18
    ;; POP 	r17
;; RET
;; ;; =======================================================================
;; ;; перевол 8-разрядного двоично-десятичного (BCD) числа в десятичное
;; ;; вход: 	r16 BCD число
;; ;; выход:	r16 десятичное число
;; BCD2DEC: 
    ;; PUSH 	r17
    ;; PUSH 	r18
    ;; PUSH 	r16
    ;; SWAP 	r16
    ;; CLR 	r18
    ;; CBR 	r16, 0b11110000
    ;; MOV 	r18, r16
    ;; CLR 	r17
;; Bcd2Dec_1:
    ;; ADD 	r16, r18
    ;; INC 	r17
    ;; CPI 	r17, 9
    ;; BRNE 	Bcd2Dec_1
    ;; MOV 	r17, r16
    ;; POP 	r16 
    ;; CBR 	r16, 0b11110000
    ;; ADD 	r16, r17
    ;; POP 	r18
    ;; POP 	r17
;; RET
;; ;; =======================================================================
;; ;; сравнение 16-разрядных чисел
;; ;; вход: 	r16-r17 первый аргумент от H к L
;; ;; 		r18-r19 второй аргумент от H к L
;; ;; выход:	смотри флаги
CP16X16:
    CP		r17, r19
    CPC		r16, r18
RET
;; ;; =======================================================================
;; ;; вычисление цифр 8-разрядного числа
;; ;; вход: 	r16 аргумент
;; ;; выход:	r16-r18 цифры от H к L
;; DIGITS8:
    ;; CLR		R26
    ;; CLR		R27
    ;; CLR		R28
    ;; CLR		R29
    ;; CLR		R30
    ;; LDI		r17,100
;; DIG8_1:
    ;; CP		r16, r17
    ;; BRLO	DIG8_2
    ;; SUB		r16, r17
    ;; ;; сотни
    ;; INC		R26	
    ;; RJMP	DIG8_1
;; DIG8_2:	
    ;; LDI		r17,10
;; DIG8_3:
    ;; CP		r16, r17
    ;; BRLO	DIG8_4
    ;; SUB		r16, r17
    ;; ;; тысячи
    ;; INC		R27		
    ;; RJMP	DIG8_3
;; DIG8_4:
    ;; ;; в r16 остались только единицы
    ;; MOV		r18, r16
    ;; MOV		r16, R26		
    ;; MOV		r17, R27
;; RET
;; =======================================================================
;; вычисление цифр 16-разрядного числа
;; вход: 	r16-r17 аргумент от H к L
;; выход:	r16-r20 цифры от H к L
DIGITS16:
    CLR		R26
    CLR		R27
    CLR		R28
    CLR		R29
    CLR		R30
    LDI		r18, HIGH(10000)
    LDI		r19, LOW(10000)
DIG16_1:
    RCALL	CP16X16	
    BRLO	DIG16_2
    RCALL	SUB16X16
    ;; десятки тысяч
    INC		R26	
    RJMP	DIG16_1
DIG16_2:	
    LDI		r18, HIGH(1000)
    LDI		r19, LOW(1000)
DIG16_3:
    RCALL	CP16X16	
    BRLO	DIG16_4
    RCALL	SUB16X16
    ;; тысячи
    INC		R27		
    RJMP	DIG16_3
DIG16_4:
    LDI		r18, HIGH(100)
    LDI		r19, LOW(100)
DIG16_5:
    RCALL	CP16X16	
    BRLO	DIG16_6
    RCALL	SUB16X16
    ;; сотни
    INC		R28	
    RJMP	DIG16_5
DIG16_6:
    LDI		r18, HIGH(10)
    LDI		r19, LOW(10)
DIG16_7:
    RCALL	CP16X16	
    BRLO	DIG16_8
    RCALL	SUB16X16
    ;; десятки
    INC		R29
    RJMP	DIG16_7
DIG16_8:
    ;; в r16-r17 остались только единицы
    MOV		r20, r17
    MOV		r16, R26		
    MOV		r17, R27
    MOV		r18, R28
    MOV		r19, R29
RET
;; =======================================================================

